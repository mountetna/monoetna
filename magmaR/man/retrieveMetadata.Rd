% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/identifier-linkage.R
\name{retrieveMetadata}
\alias{retrieveMetadata}
\title{(Not complete) Retrieve data from one model of a project that is linked to data from a different, target model of the same project}
\usage{
retrieveMetadata(
  projectName,
  main_modelName,
  main_recordNames = "all",
  meta_modelName,
  meta_attributeNames = "all",
  meta_group.by = NULL,
  token = .get_TOKEN(),
  ...
)
}
\arguments{
\item{projectName}{the name of the project you would like to download data from, exactly as it appears at https://timur.ucsf.edu}

\item{main_modelName, main_recordNames}{Strings which indicate the target data for which meta-data is desired.}

\item{meta_modelName, meta_attributeNames}{Strings which indicate the linked "meta"data to retrieve.}

\item{meta_group.by}{String, an attribute within the meta_model that can be used to group data when there are expected to be more than 1 record of metadata per record of target data.}

\item{token}{your TOKEN from https://janus.ucsf.edu}

\item{...}{Additional parameters passed along to the internal `.query()` and `.retrieve()` functions.
For troubleshooting or privileged-user purposes only.
Options: \code{verbose} (Logical), or \code{url.base} (String which can be user to direct toward production versus staging versus development versions of maagma).}
}
\value{
A dataframe with rows = main_recordNames and columns = either meta_attributeNames or repeats of main_attributeNames to accommodate 1:many mappings.
}
\description{
(Not complete) Retrieve data from one model of a project that is linked to data from a different, target model of the same project
}
\examples{

##### FILLER

# Unless a working TOKEN is hard-coded, or it is in an interactive session,
#   this code will not work.

if (interactive()) {
    # Running like this will ask for input of your janus token.
    retrieveJSON(
        projectName = "ipi",
        modelName = "patient",
        recordNames = "all",
        attributeNames = "all",
        filter = "")
}

}
