{
  "projects": ["xcrs1", "ipi"],
  "authors": ["Dan Bunis", "Saurabh Asthana"],
  "lastModified": "Oct 19, 2021",
  "vignette": "# Workflow for: Single-cell Gene Expression Processing, Visualization, and Differential Gene Expression\n\nThis workflow performs merging and pre-processing of single-cell data via a standard pipeline (in python, using `scanpy`, for scalability), then allows exploration of the data via umap visualization and differential expression calculation\n\nMany inputs are provided which can be used to tweak how data will be processed for specific use-cases, but it should be noted that ALL of these inputs are initialized with practical defaults. Thus, *users can typically feel comfortable moving forward by simply accepting (or 'commit'ing) the parameters which pop up at the start!* For users initerested in adjusting these parameters, note that hovering your cursor over any (?) icon will reveal documentation about specific inputs.\n\n## Usage Notes:\n\n- When getting to the 'Manually Annotate Clusters' step for the first time, you will need to commit the initial values provided in order to advance to the point of actually being able to examine the clusters in the umap.\n- Prior to UMAP visualization, you will also need to select a non-preliminary differential expression path. This is a bug which will be removed in the future, but until then, the easiest path is to select '1 btwn-all-de-groups' for question type and then choose the 'leiden' option from the 'DiffExp by:' dropdown.\n\n## Overview of Workflow Steps:\n\n The general steps of the workflow include:\n\n- **Data Selection:** Selecting of which single-cell data records to analyze is accomplished by selecting sets of allowed values for specific-attributes of the data records. Records matching those criteria will then be retrieved and presented to the user for approval. Users may then deselect specific records, if needed, and then confirm their final record selections.\n\n- **Merging and processing:** Endpoints of initial processing steps are 1) Clustering and 2) UMAP embedding of cells, as well as 3) differential expression to identify cluster markers. Specifically, raw counts data of selected records are retrieved, imported into `scanpy`, and merged. Afterwards, cells are filtered (based on cutoffs that are among the primary inputs), counts data are normalized and scaled (with optional regression of parameters chosen within primary user inputs), and principal components analysis is run. An optional batch correction adjustment via `harmonypy` can then be performed, which will adjust these PCA embeddings in order to minimize variation associated with the batch-signifying parameter that the user indicates. Next, cell clustering and umap embedding are calculated based on a neighborhood graph which is itself built from either the PCA or harmonypy-adjusted PCA (again, with tunable user inputs). And finally, a preliminary differential gene expression is performed to idenfiy top markers of each cluster by comparing each cluster versus every other cluster in. These DGE results are presented for download, and can be viewed in the next step, as an on-hover overlay of top 10 genes per cluster, when coloring the umap plot by 'Cluster'.\n\n- **Visulaization and Cluster Annotation (optional):** At this stage, users can:\n\n    1. Visualize their data by overlaying metadata or gene expression values on the UMAP.\n    2. Annotate the clusters based on the preliminary differntial expression results. (Hint: when coloring the UMAP by 'Cluster', top markers of each cluster are displayed upon hover!)\n    3. Download the final signel-cell data object to perforfollow up analysis outside of vulcan.\n\n- **Differential Gene Expression (DGE) Analysis (optional):** Users may continue forwards to query differences between cells of their datasets by performing differential expression in various ways. DGE calculations can be performed for various types of questions. See below for details of how to adjust the calculation method itself. After calculation, DGE results will be filtered based on the 'DGE Cutoffs' inputs, and both the pre-filtering ('full') and post-filtering ('filtered') DGE results will be presented for download. *Note that only the outputs of the most recent differential expression run will be displayed in the user interface at any time, so be sure to download your results between DGE queries when performing multiple!*\n\n## Additional Details for Running Differential Expression:\nOnce data is processed to the point where clusters are generated and annotated, a user input titled 'Set how DE should be run' allows users to perform differential expression analysis.  There are many ways that one might wish to query differences between groups of cells, and it may seem a bit complicated at first, but most questions can be encompassed within the method selection widget provided once you get to this step of the processing!\n\n- The differential expression configuration: The first step of filling in this setup widget is selecting the configuration which fits your DGE question.  For all configurations, a next step (labeled step 3) will be to select the metadata to use for the differential expression comparison, so we'll be referencing that metadata in these explanations. Configurations are:\n\n  1. Comparison between each group of a particular metadata to all other groups of that metadata. The most common use case for this configuration is establishing cluster markers. After selecting this method, the widget will only ask for what metadata to use, and for cluster annotation the target metadata would be 'leiden'.\n  2. Comparison between chosen metadata labels. This configuration runs a single differential expression comparison, and an example use case here would be comparison of cases versus controls. After selecting this method, the user will be asked what metadata to use, and also what labels of that metadata should be included in the 2 comparison groups. It's in this stage that the user would select, for example, which label(s) to consider as cases (a.k.a. 'set1') versus controls (a.k.a. 'set2').\n  3. Comparison between chosen metadata labels as in 2, but focusing among specific cell groups / types. An example use case here would be performing a case vs control comparison within specific cell types. The setup here is similar to configuration 2 except for an additional selection step (step 4). Here the metadata denoting groupings of cells is chosen, followed by indication of which labels of that metadata to target. As an example, to perform a case vs control comparison within all major cell types, after having utilized the Manual Annotations input to group clusters into cell types, one would select this configuration, then select the metadata holding samples' clinical diagnosis. Labels of that diagnosis metadata denoting target cases, perhaps 'Head and Neck Cancer' and 'Kidney Cancer', would then be selected to represent set 1, and labels of that diagnosis metadata which denote target controls, perhaps 'Healthy Control' would then be selected to represent set 2.  Next, the metadata holding cell type annotations, the 'meta' groupings, is selected in 'step 4', as well as which cell types / groups to run a comparison for.  One might select all the cell types at this stage, or just a few.\n- Subsetting: For all configurations, users are provided an option to subset their data prior to calculation. The use cases here are broad, but perhaps the user's goal is to perform a case vs control comparison within all myeloid cells, for which the method would be to use the subsetting option to get rid of all non-myeloid cells, and then use configuration 2 for performing the calculation. Or perhaps the user wants to identify cluster markers while ignoring a cluster that they suspect contains low quality cells, in which case the method would be to select their 'leiden' metadata for subsetting and select to keep all clusters except one, and then utilize configuration 1 for performing the calculation. In any case, to perform subsetting, first check the associated checkbox, then select which metadata to use for subsetting, and then select the labels of that metadata that should be *retained*. Afterwards, the scanpy dataset will be subset to only these cells *prior* to differential expression calculations being performed with the user's chosen configuration.\n- Additional input sets that affect DGE calculation or output:\n  - '7 Post UMAP DGE Calculation Inputs': These inputs are passed along to the function underlying literal differential expression calculations, `scanpy.tl.rank_genes_groups()`.\n  - '8 Post Calculation DGE Cutoffs': These inputs establish cutoffs for the 'filtered' version of the DGE output, which is generated after the 'full' output is constructed.\n\n### Future Feature Addition Plans:\n\n- Additional visualization methods.\n- Back-end updates to improve the user experience by reducing how often analysis steps are re-run.\n\n#### Additional Note: Refer to in-line (?) icons for further information about specific steps/inputs.",
  "tags": ["single-cell", "umap", "clustering", "differential expression"],
  "image": "umap.png",
  "displayName": "scRNAseq",
  "description": "scRNAseq Workflow: single-cell data prep & exploration"
}
