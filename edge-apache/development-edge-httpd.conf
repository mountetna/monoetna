# NOTE: This would ideally be generated from a template in a similar manner to the chef deployment strategy.

# Data files should be mounted on the edge-docker's container in a path matching the patch from
# metis.  This directive will then stream those files from the edge node.
EnableSendfile on
LoadModule ssl_module modules/mod_ssl.so

<VirtualHost *:443>
    ProxyPass / http://janus_app_fe/ disablereuse=on
    ProxyPassReverse / http://janus_app_fe/

    SSLEngine on

    ServerName janus.development.local

    SSLCertificateFile /root/certs/janus.development.local.pem
    SSLCertificateKeyFile /root/certs/janus.development.local-key.pem
</VirtualHost>

<VirtualHost *:443>
    ProxyPass / http://metis_app_fe/ disablereuse=on
    ProxyPassReverse / http://metis_app_fe/

    ServerName metis.development.local

    SSLEngine on
    SSLCertificateFile /root/certs/metis.development.local.pem
    SSLCertificateKeyFile /root/certs/metis.development.local-key.pem

    XSendFile On
    XSendFilePath /app/data
</VirtualHost>

<VirtualHost *:443>
    ProxyPass / http://timur_app_fe/ disablereuse=on
    ProxyPassReverse / http://timur_app_fe/

    ServerName timur.development.local

    SSLEngine on
    SSLCertificateFile /root/certs/timur.development.local.pem
    SSLCertificateKeyFile /root/certs/timur.development.local-key.pem
</VirtualHost>

<VirtualHost *:443>
    ProxyPass / http://magma_app_fe/ disablereuse=on
    ProxyPassReverse / http://magma_app_fe/

    ServerName magma.development.local

    SSLEngine on
    SSLCertificateFile /root/certs/magma.development.local.pem
    SSLCertificateKeyFile /root/certs/magma.development.local-key.pem
</VirtualHost>

<VirtualHost *:443>
    ProxyPass / http://polyphemus_app_fe/ disablereuse=on
    ProxyPassReverse / http://polyphemus_app_fe/

    ServerName polyphemus.development.local

    SSLEngine on
    SSLCertificateFile /root/certs/polyphemus.development.local.pem
    SSLCertificateKeyFile /root/certs/polyphemus.development.local-key.pem
</VirtualHost>
