version: '3.8'

services:
  postgres:
    image: postgres:10.19
    environment:
      POSTGRES_DB: "polyphemus"
      POSTGRES_PASSWORD_FILE: /run/secrets/password
      POSTGRES_USER: developer
    volumes:
      - db:/var/lib/postgresql/data
    deploy:
      placement:
        constraints:
          - node.labels.volumes.big-shared == true
          - node.labels.psql.primary == true
    networks:
      - db
    secrets:
      - source: db-pw
        target: password

  projects_loader:
    image: etnaagent/polyphemus:production
    volumes:
      - projects:/projects
    secrets:
      - source: id-redcap-git
        mode: 0600
    configs:
      - source: polyphemus_ssh_config
        target: /root/.ssh/config
    deploy:
      restart_policy:
        delay: 300s
      resources:
        limits:
          memory: 200mb
      placement:
        constraints:
          - node.labels.volumes.big-shared == true
    command:
      - bash
      - -c
      - |
        set -e
        mkdir -p /root/.ssh
        ssh-keyscan github.com > /root/.ssh/known_hosts
        cd /projects
        git pull

  app:
    environment:
      - APP_NAME=polyphemus
      - POLYPHEMUS_ENV=production
      - ETNA__PRODUCTION_FILE=/app/env.yml
      - ETNA__PRODUCTION__DB__PASSWORD_FILE=/run/secrets/db-password
      - ETNA__PRODUCTION__ROLLBAR__ACCESS_TOKEN_FILE=/run/secrets/rollbar-access-token
      - ETNA__PRODUCTION__USER_HASH_SECRET=/run/secrets/user-hash-secret
    command:
      - bash
      - -c
      - |
        set -e
        export METRICS_PW="$$(cat /run/secrets/metrics-pw)"
        exec /bin/deploy.sh migrate -- /app/bin/puma.sh
    image: etnaagent/polyphemus:production

    volumes:
      - projects:/app/lib/etls/redcap/projects:nocopy
    deploy:
      update_config:
        parallelism: 1
      replicas: 2
      labels:
        - autoupdate=true
        - prometheus-etna=1 # 3000
      placement:
        constraints:
          - node.labels.is_edge != true
          - node.labels.gne.whitelisted == true
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 1s
      test: bash -c 'curl -f -X OPTIONS http://localhost:3000 || exit 1'
      timeout: 5s
    configs:
      - source: config
        target: /app/config.yml
      - source: env
        target: /app/env.yml
      - source: known_hosts
        target: /root/.ssh/known_hosts
    networks:
      db:
      prometheus:
      fe:
        aliases:
          - polyphemus_app
    secrets:
      - metrics-pw
      - source: db-pw
        target: db-password
      - source: id_rsa_gne
        target: /root/id_rsa_gne
      - source: rollbar
        target: rollbar-access-token

  app_fe:
    environment:
      - APP_NAME=polyphemus
      - POLYPHEMUS_ENV=production
    image: etnaagent/polyphemus_app_fe:production
    networks:
      - edge_bridge
      - fe
    volumes:
      - app_public:/app/public:nocopy
    # Notably, apache needs to start as super user but it immediately downgrades
    # its own user permissions after bootup.  See the includes.
    user: 0:3000 # su:browser
    configs:
      - source: browser.system.include
        target: /usr/opt/httpd.conf.d/browser.system.include
    deploy:
      replicas: 1
      labels:
        - autoupdate=true

      placement:
        constraints:
          - node.labels.volumes.big-shared == true

  app_assets_deployer:
    environment:
      - APP_NAME=polyphemus
      - POLYPHEMUS_ENV=production

    command: /bin/deploy.sh syncAssets -- true # Sync the assets to the shared data volume and stop.
    image: etnaagent/polyphemus:production
    volumes:
      - app_public:/sync-assets:nocopy

    user: 0:3000
    deploy:
      labels:
        - autoupdate=true
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.labels.volumes.big-shared == true

volumes:
  app_public:
    name: polyphemus_production_app_public
    driver: local
    driver_opts:
      type: nfs
      o: addr=mtetna-nfs1,nolock,noatime,suid,nodev,retry=16,proto=tcp,nfsvers=3
      device: ":/cache/polyphemus/app_public"
  db:
    name: "polyphemus_production_db"
    driver: local
    driver_opts:
      type: nfs
      o: addr=mtetna-nfs1,nolock,noatime,suid,nodev,retry=16,proto=tcp,nfsvers=3,hard,intr
      device: ":/cache/postgres/polyphemus"
  projects:
    name: "polyphemus_projects"
    driver: local
    driver_opts:
      type: nfs
      o: addr=mtetna-nfs1,nolock,noatime,suid,nodev,retry=16,proto=tcp,nfsvers=3,hard,intr
      device: ":/cache/polyphemus/projects"

configs:
  polyphemus_ssh_config:
    external: true
    name: ${POLYPHEMUS_SSH_CONFIG:-polyphemus_ssh_config}
  known_hosts:
    external: true
    name: ${POLYPHEMUS_KNOWN_HOSTS:-polyphemus_known_hosts}
  browser.system.include:
    name: ${BROWSER_SYSTEM_INCLUDE:-browser.system.include}
    external: true
  config:
    external: true
    name: ${APP_CONFIG:-polyphemus.production.yml}
  env:
    external: true
    name: ${ENV_CONFIG:-etna.production.yml}

secrets:
  id-redcap-git:
    external: true
    name: ${ID_REDCAP_GIT:-id-redcap-git}
  user-hash-secret:
    external: true
    name: ${USER_HASH_SECRET:-user-hash-secret}
  metrics-pw:
    external: true
    name: ${METRICS_PW:-metrics-pw}
  id_rsa_gne:
    external: true
    name: ${ID_RSA_GNE:-id_rsa_gne}
  db-pw:
    external: true
    name: "polyphemus_production_db_password"
  rollbar:
    external: true
    name: polyphemus_rollbar


networks:
  fe:
  db:
  edge_bridge:
    external: true
  prometheus:
    external: true
