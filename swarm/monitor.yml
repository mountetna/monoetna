version: '3.8'
services:
  prometheus:
    hostname: prometheus
    image: prom/prometheus:v2.30.1
    command: "--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.retention.time=14d  --storage.tsdb.retention.size=30GB --web.enable-admin-api --storage.tsdb.path=/prometheus --web.config.file=/etc/prometheus/web-config.yml --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles"
    volumes:
      - tsdb:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: prometheus.yml
        target: /etc/prometheus/prometheus.yml
      - source: alertmanager.yml
        target: /etc/prometheus/alertmanager.yml
      - source: rules.yml
        target: /etc/prometheus/rules.yml
      - source: web-config.yml
        target: /etc/prometheus/web-config.yml
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        failure_action: rollback
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
          - node.labels.volumes.prometheus-tsdb == true
    networks:
      - edge_bridge
      - prometheus
    user: "1500:999" # dockerapp:docker
  
  alertmanger:
    hostname: alertmanager
    image: "prom/alertmanager:v0.21.0"
    command: "--config.file=/alertmanager.yml"
    configs:
      - alertmanager.yml
    networks:
      - prometheus
    volumes:
      - alertmanager-data:/alertmanager
    deploy:
      mode: replicated
      update_config:
        failure_action: rollback
      replicas: 1
      restart_policy:
        condition: any
    
  grafana:
    hostname: grafana
    image: "grafana/grafana:7.5.1"
    volumes:
      - /etc/grafana:/etc/grafana
      - /var/lib/grafana:/var/lib/grafana

    networks:
      - edge_bridge
    user: "1500:999" # dockerapp:docker
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:

          - node.labels.volumes.grafana-data == true

volumes:
  alertmanager-data:
  tsdb:
    external: true
    name: prometheus-tsdb # historical name before swarm, reusing that volume.

configs:
  prometheus.yml:
    external: true
    name: ${PROMETHEUS_CONFIG:-prometheus.yml}
  alertmanager.yml:
    external: true
    name: ${ALERTS_CONFIG:-alertmanager.yml}
  rules.yml:
    external: true
    name: ${RULES_CONFIG:-rules.yml}
  web-config.yml:
    external: true
    name: ${WEB_CONFIG:-web-config.yml}

networks:
  edge_bridge:
    external: true
  prometheus:
    external: true
