version: '3.8'

# Intended for agents that run in global deploy node, on most or all nodes, for service health purposes.
services:
  postgres:
    image: "postgres:11"
    environment:
      POSTGRES_USER: developer
      POSTGRES_PASSWORD_FILE: /run/secrets/airflow-postgres-password
      POSTGRES_DB: airflow
    secrets:
      - airflow-postgres-password
      - airflow-fernet-key
    volumes:
      - airflow-metadata-db:/var/lib/postgresql/data
    networks:
      - airflow
    command:
      - "postgres"
      - "-c"
      - "max_connections=150"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        failure_action: rollback
      placement:
        constraints:
          - node.labels.volumes.airflow-metadata-db == true
    healthcheck:
      test: pg_isready -q -d prefect -U developer || exit 1
      interval: 10s
      timeout: 2s
      retries: 60
      start_period: 2s

  ui:
    image: etnaagent/airflow:production
    command: webserver
    secrets:
      - airflow-postgres-password
      - airflow-fernet-key
    deploy:
      update_config:
        parallelism: 1
        order: start-first
      mode: replicated
      labels:
        - autoupdate=true
        - prometheus_port=9000
      replicas: 1
      placement:
        constraints:
          - node.labels.volumes.airflow-dags == true
          - node.labels.volumes.airflow-logs == true
    environment:
      AIRFLOW__CORE__EXECUTOR: etna.executors.local_executor.LocalExecutor
      AIRFLOW__WEBSERVER__BASE_URL: https://airflow.dsco.ucsf.edu
      ETNA_AUTH_COOKIE_NAME: JANUS_TOKEN
      ETNA_AUTH_JANUS_URL: https://janus.ucsf.edu
      ETNA_AUTH_PUBLIC_KEY: |
       -----BEGIN PUBLIC KEY-----
       MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA3cmYfKvOUxKLgv/TQ9aG
       hMA4TCs2gQosmYejdE8I4Y39dSHtUnERX3ztMoesZVdhXU1GR7LWTfuOIze/H9q+
       x/IDx/KBBoiYV+oZ6tCRVV74lNJJpAEyRT5hAW9yW2/OTG2R6wlXc1oxjRfi+M38
       mMzNN/mR54Yzgr4Rch1NYCd/ZOt0zrBKuNg7xu17N1wDjc7XDVgCn4btgpwO3g8D
       wsiAXwnpbXgi1FP+7oiHiHPS07+CuKDafvLXqAVB2VymIR5muyWyayrxGjxyulZY
       TiDEPew/1TSBS+F8c4ZmAuH7fj+XX4ofWboZFrKl3R8V/041TdZX5nfOiLL3guDT
       V1fcc4gKfED4wI8bui0KDZqSTNYXsHNEm2r6y5VRhRwpRqFYT6YvAtiHrS9/U0L8
       rl8qoQWGG+bqepaBcQZ6GuPzWcTQfookI0LMQHpexAfBef1IQS7JJ7CrRgLD8ryS
       eolIQsOIX1fVTPUlY2x7liDaC49dnoZNDjMTy6bOiWGXzek0iF7qZd12nbDW5vUQ
       iJ3tahGjB3AbekXFGXNBOByW/qZrj0EHWWJMysZ2lDlTnAPtBmwwcF9YTZQA7XGO
       sPDtWvOVFzFxTEIPok1Cv/4dZDcVX4raeLaftV4PNY38o19E+ensWKeFUoA0a+wC
       VnOJnAt45Hq/mNZEBP2I7/MCAwEAAQ==
       -----END PUBLIC KEY-----

    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 5

    volumes:
      - dags:/opt/airflow/dags
      - logs:/opt/airflow/logs
    networks:
      - airflow
      - edge_bridge
      - prometheus

  scheduler:
    image: etnaagent/airflow:production
    command: scheduler
    secrets:
      - airflow-postgres-password
      - airflow-fernet-key
    deploy:
      mode: replicated
      update_config:
        parallelism: 1
        order: start-first
      labels:
        - autoupdate=true
      replicas: 1
      placement:
        constraints:
          - node.labels.volumes.airflow-dags == true
          - node.labels.volumes.airflow-logs == true
          - node.role == manager
    healthcheck:
      interval: 60s
      retries: 3
      start_period: 5s
      test: 
      - CMD
      - /opt/airflow/entrypoint-with-secret-files.sh
      - jobs
      - check
      - --job-type
      - SchedulerJob
      - --allow-multiple
      - --limit
      - "100"
      timeout: 25s

    environment:
      AIRFLOW__CORE__EXECUTOR: etna.executors.local_executor.LocalExecutor
      AIRFLOW__WEBSERVER__BASE_URL: https://airflow.dsco.ucsf.edu

    volumes:
      - dags:/opt/airflow/dags
      - logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - airflow
     
  init:
    image: etnaagent/airflow:production
    command: version
    environment:
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD}
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: none
        max_attempts: 1
    secrets:
      - airflow-postgres-password
      - airflow-fernet-key
    networks:
      - airflow

volumes:
  airflow-metadata-db:
  dags:
  logs:

networks:
  airflow:
  edge_bridge:
    external: true
  prometheus:
    external: true

secrets:
  airflow-fernet-key:
    external: true
    name: ${AIRFLOW_FERNET_KEY:-airflow-fernet-key}
  airflow-postgres-password:
    external: true
