version: '3.8'

# Be sure to customize by removing commented lines that are relevant
# (hmac keys, data sources), or adding additional items necessary.
# This is intended as a base template and not fully comprehensive.
# It is also likely slowly to diverge in convention from other deployments.

services:
  postgres:
    image: postgres:10.19
    environment:
      POSTGRES_DB: "${APP_NAME}"
      POSTGRES_PASSWORD_FILE: /run/secrets/password
      POSTGRES_USER: developer
    volumes:
      - db:/var/lib/postgresql/data
    deploy:
      placement:
        constraints:
          - node.labels.volumes.${APP_NAME}_${ENV}_db == true
    networks:
      - db
    secrets:
      - source: db-pw
        target: password

  app:
    environment:
      APP_NAME: ${APP_NAME}
      "${APP_ENV}": production
      ETNA__PRODUCTION_FILE: /app/env.yml
      ETNA__PRODUCTION__DB__PASSWORD_FILE: /run/secrets/db-password
      ETNA__PRODUCTION__ROLLBAR__ACCESS_TOKEN: /run/secrets/rollbar-access-token
      ETNA__PRODUCTION__USER_HASH_SECRET: /run/secrets/user-hash-secret
#      ETNA__PRODUCTION__HMAC_KEYS__METIS_FILE: /run/secrets/staging-metis-hmac
#      ETNA__PRODUCTION__HMAC_KEYS__MAGMA_FILE: /run/secrets/staging-metis-hmac
    command:
      - bash
      - -c
      - |
        set -e
        export METRICS_PW="$$(cat /run/secrets/metrics-pw)"
        exec /bin/deploy.sh migrate -- /app/bin/puma.sh
    image: etnaagent/${APP_NAME}:${ENV}
    volumes:
      #- ${DATA_SOURCE}/${APP_NAME}/:/app/data/${APP_NAME}
      - /var/node_exporter/metrics.prom:/tmp/metrics.prom
    #user: ${APP_UID}:999 # metis:docker
    deploy:
      update_config:
        parallelism: 1
        order: start-first
      labels:
        - autoupdate=true
      #placement:
        #constraints:
          #- node.labels.volumes.${APP_NAME}_${ENV}_data == true
    healthcheck:
      interval: 60s
      retries: 60
      start_period: 1s
      test: bash -c 'wget -O - http://localhost:3000 &>/dev/null || exit 1'
      timeout: 2s
    configs:
      - source: config
        target: /app/config.yml
      - source: env
        target: /app/env.yml
    networks:
      - db
      - fe
      - prometheus
    secrets:
      #- staging-metis-hmac
      #- staging-magma-hmac
      - metrics-pw
      - source: db-pw
        target: db-password

  app_fe:
    environment:
      APP_NAME: ${APP_NAME}
      "${APP_ENV}": production
    image: etnaagent/${APP_NAME}_app_fe:${ENV}
    networks:
      - edge_bridge
      - fe
    volumes:
      - app_public:/app/public
      #- ${DATA_SOURCE}/${APP_NAME}/:/app/data/${APP_NAME}:ro
    # Notably, apache needs to start as super user but it immediately downgrades
    # its own user permissions after bootup.  See the includes.
    user: 0:3000 # su:browser
    configs:
      - source: browser.system.include
        target: /usr/opt/httpd.conf.d/browser.system.include
    deploy:
      labels:
        - autoupdate=true
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.labels.volumes.${APP_NAME}_${ENV}_app_public == true
          #- node.labels.volumes.${APP_NAME}_${ENV}_data == true

  app_assets_deployer:
    environment:
      APP_NAME: ${APP_NAME}
      "${APP_ENV}": production

    command: /bin/deploy.sh syncAssets -- true # Sync the assets to the shared data volume and stop.
    image: etnaagent/${APP_NAME}:${ENV}
    volumes:
      - app_public:/sync-assets:rw

    deploy:
      labels:
        - autoupdate=true
      restart_policy:
        condition: none
      mode: global
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.labels.volumes.${APP_NAME}_${ENV}_app_public == true

volumes:
  app_public:
  db:
    name: "${APP_NAME}_${ENV}_db"

configs:
  browser.system.include:
    external: true
  config:
    external: true
    name: "${APP_NAME}.yml"
  env:
    external: true
    name: "etna.${ENV}.yml"

secrets:
  user-hash-secret:
    external: true
  metrics-pw:
    external: true
  staging-metis-hmac:
    external: true
  staging-magma-hmac:
    external: true
  db-pw:
    external: true
    name: "${APP_NAME}_${ENV}_db_password"

networks:
  fe:
  db:
  edge_bridge:
    external: true
  prometheus:
    external: true
