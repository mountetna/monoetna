version: '3.8'

services:
  postgres:
    image: postgres:10.19
    environment:
      POSTGRES_DB: "${APP_NAME}"
      POSTGRES_PASSWORD_FILE: /run/secrets/password
      POSTGRES_USER: developer
    volumes:
      - db:/var/lib/postgresql/data
    deploy:
      placement:
        constraints:
          - node.labels.volumes.${APP_NAME}_${ENV}_db == true
    networks:
      - db
    secrets:
      - source: db-pw
        target: password

  app:
    environment:
      - APP_NAME=${APP_NAME}
      - ${APP_ENV}=production
      - ETNA__PRODUCTION_FILE=/app/env.yml
      - ETNA__PRODUCTION__DB__PASSWORD_FILE=/run/secrets/db-password
      #- ETNA__PRODUCTION__ROLLBAR__ACCESS_TOKEN=/run/secrets/rollbar-access-token
      - ETNA__PRODUCTION__USER_HASH_SECRET=/run/secrets/user-hash-secret
      - ETNA__PRODUCTION__HMAC_KEYS__METIS_FILE=/run/secrets/staging-metis-hmac
      - ETNA__PRODUCTION__HMAC_KEYS__MAGMA_FILE=/run/secrets/staging-metis-hmac
      #- ETNA__PRODUCTION__BACKUP__CREDENTIALS__AWS_SECRET_ACCESS_KEY_FILE=/run/secrets/metis-aws-backup-key-${ENV}
    command:
      - bash
      - -c
      - |
        set -e
        export METRICS_PW="$$(cat /run/secrets/metrics-pw)"
        exec /bin/deploy.sh migrate -- /app/bin/puma.sh
    image: etnaagent/${APP_NAME}:${ENV}
    volumes:
      - ${DATA_SOURCE}/${APP_NAME}/:/app/data/${APP_NAME}
      - /var/node_exporter/metrics.prom:/tmp/metrics.prom
      - thumbnails:/app/thumbnails
    user: ${APP_UID}:999 # metis:docker
    deploy:
      update_config:
        parallelism: 1
        order: start-first
      labels:
        - autoupdate=true
      placement:
        constraints:
          - node.labels.volumes.${APP_NAME}_${ENV}_data == true
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 1s
      test: bash -c 'curl http://localhost:3000 || exit 1'
      timeout: 5s
    configs:
      - source: config
        target: /app/config.yml
      - source: env
        target: /app/env.yml
    networks:
      db:
      prometheus:
      fe:
        aliases:
          - ${APP_NAME}_app
    secrets:
      - staging-metis-hmac
      - staging-magma-hmac
      - metrics-pw
      - user-hash-secret
      - source: db-pw
        target: db-password
#      - rollbar-access-token
      #- metis-aws-backup-key-${ENV}

  app_fe:
    environment:
      - APP_NAME=${APP_NAME}
      - ${APP_ENV}=production
    image: etnaagent/${APP_NAME}_app_fe:${ENV}
    networks:
      - edge_bridge
      - fe
    volumes:
      - app_public:/app/public
      - ${DATA_SOURCE}/${APP_NAME}/:/app/data/${APP_NAME}:ro
    # Notably, apache needs to start as super user but it immediately downgrades
    # its own user permissions after bootup.  See the includes.
    user: 0:3000 # su:browser
    configs:
      - source: browser.system.include
        target: /usr/opt/httpd.conf.d/browser.system.include
    deploy:
      labels:
        - autoupdate=true
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.labels.volumes.${APP_NAME}_${ENV}_app_public == true
          - node.labels.volumes.${APP_NAME}_${ENV}_data == true

  app_assets_deployer:
    environment:
      - APP_NAME=${APP_NAME}
      - ${APP_ENV}=production

    command: /bin/deploy.sh syncAssets -- true # Sync the assets to the shared data volume and stop.
    image: etnaagent/${APP_NAME}:${ENV}
    volumes:
      - app_public:/sync-assets:rw

    deploy:
      labels:
        - autoupdate=true
      restart_policy:
        condition: none
      mode: global
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.labels.volumes.${APP_NAME}_${ENV}_app_public == true

volumes:
  app_public:
  thumbnails:
  db:
    name: "${APP_NAME}_${ENV}_db"

configs:
  browser.system.include:
    name: ${BROWSER_SYSTEM_INCLUDE:-browser.system.include}
    external: true
  config:
    external: true
    name: ${APP_CONFIG:-metis.staging.yml}
  env:
    external: true
    name: ${ENV_CONFIG:-etna.staging.yml}

secrets:
  user-hash-secret:
    external: true
    name: ${USER_HASH_SECRET:-user-hash-secret}
  metrics-pw:
    external: true
    name: ${METRICS_PW:-metrics-pw}
  staging-metis-hmac:
    external: true
    name: ${STAGING_METIS_HMAC:-staging-metis-hmac}
  staging-magma-hmac:
    external: true
    name: ${STAGING_MAGMA_HMAC:-staging-magma-hmac}
  db-pw:
    external: true
    name: "${APP_NAME}_${ENV}_db_password"

networks:
  fe:
  db:
  edge_bridge:
    external: true
  prometheus:
    external: true
