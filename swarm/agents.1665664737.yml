version: '3.8'

# Intended for agents that run in global deploy node, on most or all nodes, for service health purposes.
services:
  # Keeps stuff relatively prune on docker hosts.
  pruner:
   image: docker
   volumes:
     - "/var/run/docker.sock:/var/run/docker.sock"
   command: docker system prune -af
   deploy:
     mode: global
     restart_policy:
       delay: 12h
     resources:
       limits:
         cpus: '0.5'
         memory: 200mb

  blackbox:
    image: prom/blackbox-exporter:master
    deploy:
      labels:
        - autoupdate=true
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.is_edge != true
          - node.labels.etna-worker == true
      resources:
        limits:
          cpus: '0.5'
          memory: 200mb
    configs:
      - source: blackbox.config.yml
        target: /config/blackbox.config.yml
    networks:
      - prometheus
    command:
      - --config.file=/config/blackbox.config.yml

  swarm-keeper:
    image: etnaagent/swarm-keeper:production
    deploy:
      labels:
        - autoupdate=true
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        delay: 300s
      resources:
        limits:
          cpus: '0.5'
          memory: 200mb
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - autodeployed:/deployed
    secrets:
      - source: git-swarm-keeper-private-key
        mode: 0400
      - portainer-auth.env
      - slack_webhook_url
      - service-deployer-docker-login
    command:
      - bash
      - -c
      - |
        set -eo pipefail
        source /usr/lib/swarm-keeper
        echo 'Login using /run/secrets/service-deployer-docker-login'
        docker login -u etnaagent -p "$$(cat /run/secrets/service-deployer-docker-login)"
        doPortainerAuth
        # doGithubAuth
        # Run this for 5 hours before forcing a restart to refresh the portainer auth
        # Allows the caching to make things less more efficient
        for i in $$(seq 60); do
          checkAndDeployUpdatedImages
          # updateGitSources
          sleep 60
        done
  agent:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
      resources:
        limits:
          cpus: '0.5'
          memory: 200mb
    ports:
      - 7100:8080

volumes:
  autodeployed:

configs:
  blackbox.config.yml:
    external: true
    name: ${BLACKBOX_CONFIG_YML}

networks:
  prometheus:
    external: true

secrets:
  slack_webhook_url:
    external: true
  service-deployer-docker-login:
    external: true
  git-swarm-keeper-private-key:
    external: true
  portainer-auth.env:
    external: true
