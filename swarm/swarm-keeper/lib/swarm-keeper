#!/usr/bin/env bash
set -eo pipefail

PORTAINER_HOST=${PORTAINER_HOST:-portainer.dsco.ucsf.edu}
CONNECTION=${CONNECTION:-1}

if [ -n "$SOCKS" ]; then
  PROXY="--proxy=http:socks5h://$SOCKS --proxy=https:socks5h://$SOCKS"
fi

function doPortainerAuth() {
  UN=
  PW=
  if [ -f /run/secrets/portainer-auth.env ]; then
    source /run/secrets/portainer-auth.env
  else
    read -e -p "Portainer username: " UN
    read -es -p "Portainer password: " PW
    echo
  fi

  JWT=$(http --ignore-stdin $PROXY POST https://${PORTAINER_HOST}/api/auth Username="${UN}" Password="${PW}" | jq -r '.jwt')
}

function doGithubAuth() {
  mkdir -p ~/.ssh/
  ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
  if [ -f /run/secrets/git-swarm-keeper-private-key ]; then
    cp /run/secrets/git-swarm-keeper-private-key ~/.ssh/id_rsa
  fi
}

function makeRequest() {
  local verb="$1"
  shift
  local path="$1"
  shift
  http --ignore-stdin $PROXY "$verb" https://${PORTAINER_HOST}/api${path} "Authorization: Bearer ${JWT}" $@
}

function listStacks() {
  makeRequest GET /stacks | jq -c '.[]'
}

function nonNull() {
  echo "$1" | jq --exit-status >/dev/null
}

function dig() {
  local input="$1"
  shift
  echo "$input" | jq -c $@
}

function pushStackToRep() {
  local stack="$1"
  local name=$(dig "$stack" -r '.Name')
  local id=$(dig "$stack" -r '.Id')
  local gitConfig=$(dig "$stack" '.GitConfig')

  local gitSourceMarker="/tmp/${name}.updated"
  mkdir -p /tmp/
  if ! [ -e "$gitSourceMarker" ] || [[ "$(date -r "$gitSourceMarker" +%s)" -lt "$(dig "$stack" '.UpdateDate')" ]]; then
    touch "$gitSourceMarker"
    if [[ "$(dig "$gitConfig" -r '.URL')" =~ https:\/\/github.com/([^.]*)\.git ]]; then
      local repo="${BASH_REMATCH[1]}"
      if [[ "$(dig "$gitConfig" -r '.ReferenceName')" =~ refs\/heads\/(.*) ]]; then
        local branch="${BASH_REMATCH[1]}"
        echo "Cloning..."
        git clone "git@github.com:${repo}.git" --branch "$branch" --single-branch . >/dev/null
        git config --global user.name "swarm-keeper"
        git config --global user.email "etnaagent@ucsf.edu"
        local content="$(dig "$(makeRequest GET "/stacks/${id}/file")" -r '.StackFileContent')"
        local path="$(dig "$gitConfig" -r '.ConfigFilePath')"
        echo "$content" > $path
        git add $path
        git commit -m "Updating $path from swarm-keeper"
        git push
      else
        false
      fi
    else
      false
    fi
  else
    echo "Skipping ${name}, already up to date."
  fi
}

function postToSlack() {
  post-to-slack "Swarm Keeper" "watchtower-ping" "$1"
}

function updateGitSources() {
  while read -r stack; do
    (
      echo "Processing $stack"
      name=$(dig "$stack" '.Name')
      gitConfig=$(dig "$stack" '.GitConfig')
      if nonNull "$gitConfig"; then
        local dir=$(mktemp -d)
        cd $dir
        if ! pushStackToRep "$stack"; then
          postToSlack "Failed to push $name to $gitConfig"
        fi
        cd ..
        rm -rf $dir
      fi
    ) &
  done < <(listStacks)
  wait
}
