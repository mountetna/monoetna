% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query.R
\name{query}
\alias{query}
\title{Analogous to the '/query' function of magma}
\usage{
query(
  projectName,
  queryTerms = list(),
  format = c("list", "df"),
  token = .get_TOKEN(),
  ...
)
}
\arguments{
\item{projectName}{Single string. The name of the project you would like to interact with. For options, see \code{\link{retrieveProjects}}.}

\item{queryTerms}{A list of String vector where list elements are query predicates. See \url{https://mountetna.github.io/magma.html#query} for details.}

\item{format}{Either "list" or "df" (=dataframe). This sets the desired output format.}

\item{token}{Single string. Your personal token from \url{https://janus.ucsf.edu}. 

When not explicitly given in a function call: you will be prompted to input your token, one time.
This user provided token will then be stored as a hidden variable, \code{.MAGMAR_TOKEN}, in the global R environment,
and all future magmaR calls without a \code{token} explicitly provided will turn to this \code{.MAGMAR_TOKEN}.}

\item{...}{Additional parameters passed along to internal `.retrieve()`, `.query()`, or `.update()` functions,
for troubleshooting or advanced-user purposes only: \itemize{
\item \code{request.only} (Logical) & \code{json.params.only} (Logical) which stop the function before it performs any curl requests and instead outputs the values that would have been sent to magma in, either of two formats.
\item \code{verbose} (Logical) sets whether to report the status of the curl request after it is performed.
\item \code{url.base} (String) used to direct towards production versus staging versus development versions of magma. See \code{\link{magma-environments}}
}}
}
\value{
A list, default, if \code{format == "list"},

OR A dataframe conversion if \code{format = "df"}
}
\description{
Analogous to the '/query' function of magma
}
\details{
This function initially mimics the activity of the magma/query,
which is documented here \url{https://mountetna.github.io/magma.html#query},
by performing a curl get request to the magma/query.

Afterwards, the json list output of magma/query is converted into an R list, and then the \code{format} input determines whether it should be wrangled further:
\itemize{
\item \code{format = "list"}, default: R list output directly.
\item \code{format = "df"}: R list converted into a dataframe where data comes from the list$answer and column names come from the list$format
}
}
\examples{

if (interactive()) {
    # Running like this will ask for input of your janus token one time.
    
    ### To obtain the sample-model record-identifiers that are linked to
    #   records of the rna_seq-model:

    # "Raw" output of query:
    query(
        projectName = "example",
        queryTerms = 
            list('rna_seq',
                 '::all',
                 'biospecimen',
                 '::identifier'))
                 
    # Or instead re-formatted to a dataframe, which may be easier for
    #   downstream applications in R:
    query(
        projectName = "example",
        queryTerms = 
            list('rna_seq',
                 '::all',
                 'biospecimen',
                 '::identifier'),
        format = 'df')
}

}
\seealso{
\url{https://mountetna.github.io/magma.html#query} for documentation of the underlying magma/query function.

\code{\link{retrieveProjects}} for exploring options for the \code{projectName} input.

\code{\link{retrieveModels}}, \code{\link{retrieveIds}}, and \code{\link{retrieveAttributes}} and \code{\link{retrieveTemplate}} for exploring the project structure and determining \code{queryTerm} options.
}
