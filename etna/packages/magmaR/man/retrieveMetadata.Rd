% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/retrieveMetadata.R
\name{retrieveMetadata}
\alias{retrieveMetadata}
\title{Retrieve data from one model ("meta") of a project, for records that are linked to records of data from a different model ("target").}
\usage{
retrieveMetadata(
  projectName,
  meta_modelName,
  meta_attributeNames = "all",
  target_modelName,
  target_recordNames = "all",
  token = .get_TOKEN(),
  ...
)
}
\arguments{
\item{projectName}{Single string. The name of the project you would like to interact with. For options, see \code{\link{retrieveProjects}}.}

\item{meta_modelName, meta_attributeNames}{Strings which indicate the "meta"data to retrieve.
They work the same as inputs of other functions without the \code{meta_} portion.}

\item{target_modelName, target_recordNames}{Strings which indicate the 'target' data that meta-data is desired to be linked to.
They work the same as inputs of other functions without the \code{target_} portion, and
these inputs ultimately set which records of "meta" model data to actually obtain.

\strong{The idea here...} is retrieval of "meta"data, such as patient-level data, to go alongside of a separate download (separate call) of "target" assay data that might be part of a different model.}

\item{token}{Single string. Your personal token from \url{https://janus.ucsf.edu}. 

When not explicitly given in a function call: you will be prompted to input your token, one time.
This user provided token will then be stored as a hidden variable, \code{.MAGMAR_TOKEN}, in the global R environment,
and all future magmaR calls without a \code{token} explicitly provided will turn to this \code{.MAGMAR_TOKEN}.}

\item{...}{Additional parameters passed along to internal `.retrieve()`, `.query()`, or `.update()` functions,
for troubleshooting or advanced-user purposes only: \itemize{
\item \code{request.only} (Logical) & \code{json.params.only} (Logical) which stop the function before it performs any curl requests and instead outputs the values that would have been sent to magma in, either of two formats.
\item \code{verbose} (Logical) sets whether to report the status of the curl request after it is performed.
\item \code{url.base} (String) used to direct towards production versus staging versus development versions of magma. See \code{\link{magma-environments}}
}}
}
\value{
A dataframe with rows = \code{target_recordNames} and columns = model identifiers and either \code{meta_attributeNames} or repeats of \code{meta_attributeNames_#} when there are 1:many mappings of target data records to metadata records.
}
\description{
Retrieve data from one model ("meta") of a project, for records that are linked to records of data from a different model ("target").
}
\details{
This function retrieves data from one model (the "meta" model) transformed so that rows of the returned dataframe correspond to records of a different model (the "target" model).

Internally, it first determines the path, through child-parent model linkages, to navigate from the meta_model to the target_model.

Then, it performs calls to \code{\link{query}} in order to retrieve identifier linkage along that path.
The identifier linkage is turned into a dataframe of identifier traces.

Next, it performs a call to \code{\link{retrieve}} to obtain the wanted metadata as a dataframe.

(If linkage paths would create any 1:many mappings of target data records to metadata records, data of extra records are shifted "rightwards" into columns appended with "_#" in their names.
This is a reliable, though imperfect, method so we hope to implement alternatives in the future.)

Finally, the dataframe of linkage path identifiers is merged with the metadata dataframe, reshaping the metadata to properly have one row per requested \code{target_recordName}.
}
\examples{

if (interactive()) {
    # Running like this will ask for input of your janus token one time.
    retrieveMetadata(
        projectName = "example",
        meta_modelName = "subject",
        meta_attributeNames = "group",
        target_modelName = "rna_seq",
        target_recordNames = "all")
}

}
\seealso{
\code{\link{retrieve}} and \code{\link{retrieveMatrix}} which will likely be useful for retrieving associated "target" data.
}
