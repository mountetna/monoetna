% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update.R
\name{updateValues}
\alias{updateValues}
\title{Analogous to the '/update' function of magma}
\usage{
updateValues(
  projectName,
  revisions = list(),
  token = .get_TOKEN(),
  auto.proceed = FALSE,
  ...
)
}
\arguments{
\item{projectName}{Single string. The name of the project to upload data to.}

\item{revisions}{A list of named lists containing the data to be updated.

List structure:
\itemize{
\item top level name(s): modelNames, can be 1 or more.
\item 2nd level name(s): recordNames, can be 1 or more.
\item 3rd level name(s) & contents: the attributes to update & the values to use.
}

See \url{https://mountetna.github.io/magma.html#update} for additional formatting details.}

\item{token}{your personal TOKEN from \url{https://janus.ucsf.edu}. 

When not explicitly given in a function call: you will be prompted to input token, one time.
This user provided token will then be stored as a hidden variable, \code{.TOKEN}, in the global R environment,
and all future magmaR calls without an explicitly provided token will turn to this \code{.TOKEN}.}

\item{auto.proceed}{Logical. When set to TRUE, the function does not ask beforee proceeding forwards to run '/update'.}

\item{...}{Additional parameters passed along to the internal `.update()` function.
For troubleshooting or privileged-user purposes only.
Options: \itemize{
\item \code{request.only} (Logical) & \code{json.params.only} (Logical) which stop the function short and return the values that would have been sent to magma
\item \code{verbose} (Logical) sets whether to report the status of the '/update' request to magma.
\item \code{url.base} (String) used to direct towards production versus staging versus development versions of magma.
}}
}
\value{
None directly.  The function sends data to magma, and the only output is whether that send was successful when \code{verbose} is set to \code{TRUE}.
}
\description{
Analogous to the '/update' function of magma
}
\details{
This function mimics the activity of the magma/update function, documented here \url{https://mountetna.github.io/magma.html#update},
with the main difference being that the \code{revisions} input should be in nested-list format.
Internally, this function does little more than directly pass its inputs along to magma/update via a curl request.
}
\examples{

if (interactive()) {
    # Running like this will ask for input of your janus token one time.
    
    # Note that you likely do not have write-permissions for the 'example'
    #   project, so this code can be expected to give and authorization error.

    updateValues(
        projectName = "example",
        revisions = list(
            # model
            'rna_seq' = list(
                # record
                'EXAMPLE-HS1-WB1-RSQ1' = list(
                    # attribute
                    'fraction' = list(
                        # value(s)
                        "Tcells"
                        )
                    )
                )
            )
        )
}

}
\seealso{
\url{https://mountetna.github.io/magma.html#update} for documentation of the underlying magma/update function.

\code{\link{updateMatrix}} for a matrix-dedicated version of this function which can be provided a matrix, or matrix's file location, directly.
}
