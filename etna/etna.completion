#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
string_flag_completion_names="$string_flag_completion_names --environment "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="config create_template generate_completion_script help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="add_model attribute_actions create_project help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
elif [[ "$1" == "add_model" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
else
return
fi
done
}

complete -o default -F _etna_completions etna

