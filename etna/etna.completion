#!/usr/bin/env bash

function _etna_completions() {
  _etna_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _etna_inner_completions() {
  local all_flag_completion_names=''
  local arg_flag_completion_names=''
  local multi_flags=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names --environment "
arg_flag_completion_names="$arg_flag_completion_names --environment "
multi_flags="$multi_flags  "
declare _completions_for_environment="production staging development"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="administrate config console create_template generate_completion_script help polyphemus"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ "$1" == "administrate" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help models project"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "models" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="apply_template attributes copy_template help load_from_redcap"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ "$1" == "apply_template" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__project_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --file --target-model "
arg_flag_completion_names="$arg_flag_completion_names --file --target-model "
multi_flags="$multi_flags  "
declare _completions_for_file="__file__"
declare _completions_for_target_model="__target_model__"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "attributes" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="create_file_linking_csv help load_table_from_csv update_from_csv"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ "$1" == "create_file_linking_csv" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__project_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__bucket_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__attribute_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__extension__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --collection --file --regex --folder "
arg_flag_completion_names="$arg_flag_completion_names --file --regex --folder "
multi_flags="$multi_flags  "
declare _completions_for_file="__file__"
declare _completions_for_regex="__regex__"
declare _completions_for_folder="__folder__"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "load_table_from_csv" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__project_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__model_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__file_path__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --execute "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "update_from_csv" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__project_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__model_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__filepath__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --json-values --hole-value "
arg_flag_completion_names="$arg_flag_completion_names --hole-value "
multi_flags="$multi_flags  "
declare _completions_for_hole_value="__hole_value__"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
elif [[ "$1" == "copy_template" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__project_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --file --target-model "
arg_flag_completion_names="$arg_flag_completion_names --file --target-model "
multi_flags="$multi_flags  "
declare _completions_for_file="__file__"
declare _completions_for_target_model="__target_model__"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "load_from_redcap" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__project_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__redcap_tokens__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --commit --models --mode "
arg_flag_completion_names="$arg_flag_completion_names --models --mode "
multi_flags="$multi_flags  "
declare _completions_for_models="__models__"
declare _completions_for_mode="__mode__"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
elif [[ "$1" == "project" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="create help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ "$1" == "create" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__project_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__project_name_full__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
elif [[ "$1" == "config" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="help set show"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "set" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__host__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names --ignore-ssl "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "show" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
elif [[ "$1" == "console" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_template" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="attribute_actions help"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ "$1" == "attribute_actions" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
arg_flag_completion_names="$arg_flag_completion_names  "
multi_flags="$multi_flags  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "polyphemus" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names --local --tag "
arg_flag_completion_names="$arg_flag_completion_names --tag "
multi_flags="$multi_flags  "
declare _completions_for_tag="__tag__"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
if ! [[ "$multi_flags" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
fi
a=$1
shift
if [[ "$arg_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
}

complete -o default -F _etna_completions etna

