#! /usr/bin/env bash
set -e
set -o pipefail

if ! type -p http &>/dev/null; then
  echo "Requires installation of httpie" 1>&2
  exit 1
fi

if ! type -p jq &>/dev/null; then
  echo "Requires installation of jq" 1>&2
  exit 1
fi


SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

function api() {
  $DIR/portainer-client $@
}

set +e
stackId=$(api GET /stacks | jq -c ".[] | select(.Name == \"$1\") | .Id")
set -e

if [[ -z "$stackId" ]]; then
  echo "Could not find stack $1" 1>&2
  echo "Found these: $(api GET /stacks | jq -r -c '.[] | .Name')" 1>&2
  exit 1
fi

tmp=$(mktemp)
env="$(api GET /stacks/$stackId | jq -r -c '.Env')"
endpoint="$(api GET /stacks/$stackId | jq -r -c '.EndpointId')"
api GET /stacks/$stackId/file | jq -r -c '.StackFileContent' > $tmp
marker=$(mktemp)
${EDITOR:-vim} $tmp

if [[ $marker -ot $tmp ]]; then
  echo "Deploying changes to stack file..."
  jq -c -n --argjson env "$env" --arg file "$(cat $tmp)" '{stackFileContent: $file, prune: true, env: $env}' | api PUT /stacks/$stackId?endpointId=$endpoint | jq
  $DIR/portainer-await-deploy $1
else
  echo "No changes detected to stack file, skipping deploy"
fi