#! /usr/bin/env bash
set -e

prog=$0
error() {
   echo "Whoops!  Looks like $1:$2 failed."
   echo "Please try rerunning $prog again."
   exit 1
}
trap 'error "${BASH_SOURCE}" "${LINENO}"' ERR

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" 
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

cd $DIR/..

if [[ -z "$TOKEN" ]]; then
  echo "usage TOKEN=mymetistoken $0"
  exit 1
fi


if [[ -e /local-seeds ]]; then
    set -x
    export PGUSER=developer
    export PGPASSWORD=password
    export PGHOST=$1
    export PGDATABASE=$2

    dropdb $2
    createdb $2 -O developer

    for file in /local-seeds/*.bak; do
      sed -i $file -e 's/OWNER TO .*;/OWNER TO developer;/g'
    done

    psql $2 < $3
else

function startSeedInDocker() {
    set -x
    docker-compose -p monoetna run -e TOKEN="$TOKEN" -v $DIR:/root/bin -v /tmp/local-seeds:/local-seeds $1_app /root/bin/seed_databases $1_db $1_development /local-seeds/$1_dev.bak
    set +x
}

function runSeeds() {
    make -C docker create
    startSeedInDocker timur
    startSeedInDocker magma
}

function doDownloads() {
    rm -rf /tmp/local-seeds/
    mkdir -p /tmp/local-seeds
    bin/download_metis_dir metis://dscolab/etna_development/local-seeds /tmp/local-seeds/
}

    echo
    echo

    if compgen -G /tmp/local-seeds/*.bak; then
       read -p "/tmp/local-seeds data already exists, although it may be partial or out of date.  Redownload? y/n: "
       if [[ "$REPLY" =~ y|Y ]]; then
         doDownloads
       fi
    else
      doDownloads
    fi

    echo "$0 will clear your local magma/timur development database and overwrite it with data from the download seeds."
    read -p "Continue?  y/n: "

    if ! [[ "$REPLY" =~ y|Y ]]; then
      exit 1
    fi

    runSeeds
fi
