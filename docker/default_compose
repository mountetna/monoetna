#! /usr/bin/env bash
set -e
set -o pipefail

prog=$0
error() {
   echo "Whoops!  Looks like $1:$2 failed."
   echo "Please try rerunning $prog again."
   exit 1
}
trap 'error "${BASH_SOURCE}" "${LINENO}"' ERR

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" 
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

yq() {
  docker run --rm -i -v /tmp:/workdir mikefarah/yq yq $@
}

if [[ -e $1 ]]; then
  cp $1 /tmp/composed.yml
else
  echo > /tmp/composed.yml
fi

APP_NAME=$(dirname $1)
APP_DASH_PREFIX=${APP_NAME}-
APP_ENV_PREFIX=$(echo "$APP_NAME" | tr '[:lower:]' '[:upper:]')_
# Historical compose.yml naming
[[ $APP_NAME == "metis" ]] && APP_DASH_PREFIX=

set -f
for mergeTarget in $COMPOSE_MIXINS; do
  echo "Applying $mergeTarget to $1"
  cp $DIR/$mergeTarget /tmp/
  sed 's@${APP_NAME}@'"$APP_NAME"'@g' -i /tmp/$mergeTarget
  sed 's@${APP_DASH_PREFIX}@'"$APP_DASH_PREFIX"'@g' -i /tmp/$mergeTarget
  sed 's@${APP_ENV_PREFIX}@'"$APP_ENV_PREFIX"'@g' -i /tmp/$mergeTarget

  IFS=$'\n'
  for key in $(yq r -p p $mergeTarget "*"); do
    if [[ $key =~ x-.* ]]; then
      if ! [[ "$(yq r -D @@@ -p v composed.yml "$key")" == "@@@" ]]; then
        sed -i /tmp/composed.yml -e "/^$key:/,/^\w*\$/d"
      fi

      sed -e "/^$key:/,/^\w*\$/!d" /tmp/$mergeTarget >> /tmp/composed.yml
    else
      yq r -D ' ' -p pv composed.yml "$key" > /tmp/a
      yq r -D ' ' -p pv $mergeTarget "$key" > /tmp/b
      yq m --append a b > /tmp/c

      if ! [[ "$(yq r -D @@@ -p v composed.yml "$key")" == "@@@" ]]; then
        sed -i /tmp/composed.yml -e "/^$key:/,/^\w*\$/d"
      fi

      echo >> /tmp/composed.yml
      cat /tmp/c >> /tmp/composed.yml
    fi
  done
  unset IFS
done

mv /tmp/composed.yml $1
