rule_files:
  - ./rules.yml

scrape_configs:
  - job_name: 'puma'
    static_configs:
      - targets: ['janus_app:9394', 'metis_app:9394', 'timur_app:9394', 'magma_app:9394']

  - job_name: 'etna'
    static_configs:
      - targets: ['vulcan_app:3000']
    basic_auth:
      username: prometheus
      password: metrics_pw

  # Make Prometheus scrape itself for metrics.
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # For each node in the swarm, fetch docker daemon metrics.  This must be enabled on the daemon first.
  - job_name: 'docker'
    dockerswarm_sd_configs:
      - host: unix:///var/run/docker.sock # You can also use http/https to connect to the Docker daemon.
        role: nodes
    relabel_configs:
      # Fetch metrics on port 9323.
      - source_labels: [__meta_dockerswarm_node_address]
        target_label: __address__
        replacement: $1:9323

  # For each node in the swarm, fetch node level metrics.
  - job_name: 'node'
    dockerswarm_sd_configs:
      - host: unix:///var/run/docker.sock # You can also use http/https to connect to the Docker daemon.
        role: nodes
    relabel_configs:
      # Fetch metrics on port 9323.
      - source_labels: [__meta_dockerswarm_node_address]
        target_label: __address__
        replacement: $1:9100

  - job_name: 'cadvisor'
    dockerswarm_sd_configs:
      - host: unix:///var/run/docker.sock # You can also use http/https to connect to the Docker daemon.
        role: nodes
    relabel_configs:
      # Fetch metrics on port 7100.
      - source_labels: [__meta_dockerswarm_node_address]
        target_label: __address__
        replacement: $1:7100

alerting:
  alertmanagers:
    - static_configs:
        - targets: ['alertmanager:9093']