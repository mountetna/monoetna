name: Sync subtrees and push artifacts
on:
  push:
    branches:
      - master

jobs:
  sync-artifacts-and-subtrees:
    if: "!contains(github.event.head_commit.author.name, 'GithubAction')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.SYNC_ACCESS_TOKEN }}
          fetch-depth: 0
      - name: Configure git
        run: |
          git config --global user.name 'GithubAction'
          git config --global user.email 'mountetna@users.noreply.github.com'
          git status
      - name: Reattach HEAD to Head Ref
        run: git checkout $(echo ${{ github.head_ref }} | sed -E 's|refs/[a-zA-Z]+/||')
        if: github.head_ref != ''
      - name: Reattach HEAD to Head Ref
        run: git checkout $(echo ${{ github.ref }} | sed -E 's|refs/[a-zA-Z]+/||')
        if: github.head_ref == ''
      - name:  Push npm artifacts and update package.json
        env:
          IS_CI: true
        run: |
          bin/update-package-references
      - name: Run smoke tests
        env:
          MASTER_BUILD: 1 # Will cause tests to use the true package artifacts, not local source.
        run: |
          make test
      - name: Push package reference updates
        run: |
          git config --global user.name 'GithubAction'
          git config --global user.email 'mountetna@users.noreply.github.com'
          git push
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.SYNC_ACCESS_TOKEN }}
          fetch-depth: 0
          path: tmp/subtrees
      - name:  sync-subtrees
        env:
          IS_CI: true
        run: |
          cd tmp/subtrees
          git config --global user.name 'GithubAction'
          git config --global user.email 'mountetna@users.noreply.github.com'
          git config --global core.mergeoptions --no-edit
          bin/pull-subtrees master
          bin/push-subtrees master
          bin/pull-subtrees master
          git push
  empty-job:
      # if no jobs run, github action considers it a test failure.  But we want it to be a success if the other
      # jobs just happen to be filtered, so we create a 'dummy' job that just succeeds.
      runs-on: ubuntu-latest
      if: success()
      steps:
        - name: Meep
          run: |
            echo "This job will always succeed. If no jobs run, we still want the workflow to give status success."



